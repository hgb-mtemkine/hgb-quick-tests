@import "~less/variables.less";
@import "~less/mixins.less";


//----------------------------- material override mixins -----------------------------------

.hgb-material-radio(@color, @colorBorder) {
  /deep/ .mat-radio-button.mat-accent {
    .mat-radio-inner-circle {
      background-color: @color;
    }
    &.mat-radio-checked .mat-radio-outer-circle {
      border-color: @colorBorder;
    }
    .mat-radio-ripple .mat-ripple-element {
      background-color: fade(@color, 20%) !important;
    }
  }
}

.hgb-material-checkbox(@color) {
  /deep/ .mat-checkbox {
    //.mat-checkbox-checked.mat-accent .mat-checkbox-background, .mat-checkbox-indeterminate.mat-accent .mat-checkbox-background {
    &.mat-checkbox-checked .mat-checkbox-background{
      background-color: @color;
    }
    .mat-checkbox-ripple .mat-ripple-element {
      background-color: fade(@color, 20%) !important;
    }
    .mat-checkbox-layout {
      font-weight: normal;
      white-space: normal;
      font-size: 11px;
    }
  }
}

.hgb-material-checkbox-size(@size) {
  /deep/ .mat-checkbox {
    .mat-checkbox-inner-container {
      width: @size;
      height: @size;
    }
  }
}

.hgb-material-icon-size(@size: 24px) {
  /deep/ .mat-icon {
    font-size: @size;
    height: @size;
    width: @size;
  }
}


.hgb-material-spinner-size(@size: 24px) {
  /deep/ .mat-spinner{
    font-size: @size;
    height: @size;
    width: @size;
  }
}

.hgb-material-nav(@nav-height, @color-bg, @color-fg, @color-bar) {
  nav {
    height: @nav-height;
    text-align: center;
    background-color: @color-bg;

    a {
      // dim
      height: @nav-height;
      line-height: @nav-height;
      // style
      text-decoration: none;
      color: @color-fg;
      font-size: 15px;
      font-family: @hgbFont-normal;

      &.active {
        color: @color-fg;
        opacity: 1;
      }
    }

    /deep/ .mat-ink-bar {
      background-color: @color-bar;
      height: 3px;
    }
    /deep/ .mat-tab-links {
      display: block;
    }
  }
}

.hgb-nav-menu-level2 {
  .hgb-material-nav(
    @hello-head-second-bar-height,
    white,
    #003D4C,
    @hello-dark-blue
  );
}

.hgb-nav-menu-level3 {
  .hgb-material-nav(
    @hello-head-second-bar-height,
    rgb(248, 250, 250),
    #003D4C,
    @hello-dark-blue
  );
}

.mat-menu-arrow-up {
  .mat-menu-arrow-up {
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-bottom: 10px solid #fff;
    right: 15px;
    position: absolute;
    top: -9px;
  }
}

// mat-button by default is too big, so this resets it
.mat-button-reset-size-to-0 {
  min-width: 0;
  line-height: initial;
}

//----------------------------- common HGB mixins -----------------------------------

.hgb-std-scrollable-page-commons {
  .hgb-page-scroller {
    height: @hello-height-content-under2headers;
    overflow-y: auto;
    overflow-x: hidden;

    .hgb-page-content {
      margin: 0 auto;
      width: 72%;
      min-height: 100%;
      max-width: 720px;
      background: white;
      padding: 0 @hgb-page-margin @hgb-page-margin; // NOTE: bottom padding

      /deep/ h1 {
        font-size: 26px;
        font-family: @hgbFont-normal;
        color: @hello-body-copy;
        margin: 0 auto;
        padding: 55px 0 40px 0;

        @media (max-width: 768px) {
          min-width: initial;
          max-width: initial;
          width: 200px;
          margin: initial;
        }
      }

      /deep/ .title-underline-full-width{
        margin-top: 0; //15px !important;
        border-top: 1px solid darken(@hello-secondary-bg,15%);
        margin-bottom: 20px !important;
      }

      // 0 - 1024px
      @media (max-width : 1024px) {
        width: 100%;
      }
      // 1024px - 1281px
      @media (min-width:1024px) and (max-width : 1281px) {
        width: 90%;
      }

    }
  }
}

.hgb-std-page-common-ui {
  /deep/ .hgb-settings-main-toolbar {
    margin: 10px 0 20px;
    text-align: right;
  }
}

// LESSON: this is how thin scrollbars are done
.hgb-thin-scrollbar {
  &::-webkit-scrollbar {
    width: 10px !important;
    height: 10px !important;
  }
  &::-webkit-scrollbar-thumb {
    background-color: rgba(0,0,0,0.2);
  }
  &::-webkit-scrollbar-track {
    background: rgba(255,255,255,0.08);
  }
}

.hgb-grid-node-state-color() {
  .hgb-grid-node-state-color {
    border: 1px solid #ccc;
    padding: 2px 8px 1px;
    border-radius: 20px;
    font-size: 15px;
    text-transform: uppercase;

    &.ticketed {
      border-color: #f5a623;
      color: #f5a623;
    }
    &.success {
      border-color: #72fe81;
      color: #72fe81;
    }
    &.failed {
      border-color: @hello-red2;
      color: @hello-red2;
    }
  }
}

// LESSON: this is how to do zoom in animation such as in grid tiles
.hgb-animation-zoom-in-intro(@durationS) {
  @keyframes zoom-in-intro-animation {
    from {
      opacity: 0;
      .transform(scale(0.1));
    }
    to {
      opacity: 1;
      .transform(scale(1));
    }
  }

  animation-name: zoom-in-intro-animation;
  animation-duration: @durationS;

  // TODO: this was an attempt to try randomized start but it didn't work since the DOM hierarchy is not linear and we don't have nth-child (see https://stackoverflow.com/questions/19269526/random-start-point-for-css-keyframes-animation)
  // &:nth-child(7n) { animation-delay: -0.03s }
  // &:nth-child(7n+1) { animation-delay: -0.05s }
  // &:nth-child(7n+2) { animation-delay: -0.08s }
  // &:nth-child(7n+3) { animation-delay: -0.06s }
  // &:nth-child(7n+4) { animation-delay: -0.035s }
  // &:nth-child(7n+5) { animation-delay: -0.04s }
  // &:nth-child(7n+6) { animation-delay: -0.02s }
}

.hgb-animation-fade-in-intro(@durationS) {
  @keyframes fade-in-intro-animation {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  animation-name: fade-in-intro-animation;
  animation-duration: @durationS;
}

.highlighted-tooth() {
  &.highlighted-tooth{
    border: 2px solid darkgrey;
  }

  // CSS TIP: http://jsfiddle.net/4ZeCz/5099/
  &.highlighted-tooth:after {
    content: '';
    display: block;
    position: absolute;
    bottom: -7px;
    right:50%;
    width: 10px;
    height: 10px;
    background: #FFFFFF;
    border-right:2px solid darkgrey;
    border-bottom:2px solid darkgrey;
    -moz-transform:rotate(45deg);
    -webkit-transform:rotate(45deg);
  }
}

//----------------------------- external area styles mixins -----------------------------------

.ext-area-control-ristretto() {
  max-width: 300px;
}

.ext-area-commons() {

  h1 {
    text-align: center;
    font-family: @hgbFont-mediumCondensed;
    font-size: 35px;
    font-weight: 500;
    line-height: 0.75;
    letter-spacing: -0.4px;
    color: @hello-blue2;
  }

  .heading-panel {
    text-align: center;
    margin-bottom: 30px;

    .heading-superscript {
      font-family: @hgbFont-condensed;
      font-size: 30px;
      font-stretch: condensed;
      letter-spacing: 0px;
      color: @hello-blue2;
    }
  }

  .control-container-centered {
    text-align: center;
    margin-bottom: 20px;

    &.submit-button-container {
      margin-top: 30px;
    }
  }

  .fine-print {
    text-align: center; //left; // NOTE: left align does not look good
    font-size: 12px;
    color: @hello-blue2;
  }

  .ext-area-btn-full {
    width: 100%;
    .ext-area-control-ristretto();
    border: solid 1.7px @hello-blue2;
    color: @hello-blue2;
    font-family: @hgbFont-normal;
    font-size: 16px;

    &.btn-red {
      border: solid 1.7px @hello-red2;
      color: @hello-red2;
    }
  }

  .button-container, .loader-container {
    height: 40px;
    line-height: 40px;
  }
}

//----------------------------- common deep overrides -----------------------------------

.hgb-loader-blue2() {
  /deep/ .hgb-loader-dot {
    border: 1px solid @hello-blue2;
    background-color: @hello-blue2;
  }
}

.hgb-form-friendly-overrides() {

  /deep/ .form-section {
    margin: 20px 0;
  }
  /deep/ .submit-button-container {
    margin-top: 30px;
  }

  //---------------- Angular Material overrides ----------------
  /deep/ mat-form-field {
    width: 100%;
    margin-bottom: 10px;

    .mat-form-field-infix {
      padding: .4375em 0 0; // NOTE: make bottom 0
      .mat-input-element, .mat-select {
        height: 30px;
        //background-color: white; // TODO: DISCUSSION - do we have to make this white??

        // CSS TIP: + means "element immediately after", we want to dim the span>label immediately after input[disabled]
        &[readonly] {
          opacity: 0.5;
          & + .mat-form-field-placeholder-wrapper .mat-form-field-placeholder {
            opacity: 0.5;
          }
        }
      }
    }
    .mat-form-field-suffix {
      .mat-icon {
        color: fade(@hello-blue2, 50%);

        &.validation-passed {
          color: @hello-green;
          .hgb-animation-zoom-in-intro(0.4s); // IMPROVE: 3951b82f: make a wipe right animation
        }
        &.validation-failed {
          color: @hello-red2;
          .hgb-animation-zoom-in-intro(0.4s); // IMPROVE: 3951b82f: make a wipe right animation
        }
      }

      // TODO: adufasn4: finish this mixin
      //.hgb-material-spinner-size();

    }
    .mat-form-field-placeholder {
      color: @hello-blue2;
    }
    .mat-form-field-ripple {
      background-color: @hello-blue2;
    }
  }

  .hgb-material-checkbox(@hello-blue2);
  .hgb-material-radio(@hello-blue2, #bebcbe);





  //---------------- HGB overrides ----------------
  .hgb-loader-blue2();
}

.hgb-mat-dialog-min-width-unless-mobile(@min-width) {
  min-width: @min-width;

  .mixin-private-media(@min-width-breakpoint) {
    @media (max-width: @min-width-breakpoint) {
      min-width: initial;
    }
  }
  @min-width-breakpoint: @min-width + 250px;
  .mixin-private-media(@min-width-breakpoint);
}

.hgb-table-4settings {
  .hgb-table {
    tr.click-row-to-edit {
      cursor: pointer;
    }
    .hgb-delete-icon-container;
  }
}

.hgb-delete-icon-container {
  // NOTE: makes it more comfortable to press delete button
  .delete-icon-container {
    padding: 5px;

    &:hover {
      i {
        color: @hello-lilac;
      }
    }
  }
}
